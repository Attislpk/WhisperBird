<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.wdzl.dao.FriendsRequestMapper">
  <resultMap id="BaseResultMap" type="org.wdzl.entity.FriendsRequest">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="send_user_id" jdbcType="VARCHAR" property="sendUserId" />
    <result column="accept_user_id" jdbcType="VARCHAR" property="acceptUserId" />
    <result column="request_date_time" jdbcType="TIMESTAMP" property="requestDateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, send_user_id, accept_user_id, request_date_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from friends_request
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="queryFriendRequest" parameterType="org.wdzl.entity.FriendsRequest" resultType="java.lang.Integer">
    select
    count(id)
    from friends_request
    where send_user_id = #{myUserId,jdbcType=VARCHAR} and accept_user_id = #{friendId,jdbcType=VARCHAR}
  </select>

<!--user表和friendRequest表的联合查询,返回list用于好友申请列表的显示-->
  <select id="queryFriendsList" parameterType="java.lang.String" resultType="org.wdzl.vo.FriendRequestVo">
    select
    u.id as senderId, u.nickname as senderNickname, u.username as senderUsername, u.face_Image as senderFaceImage
    from friends_request fr left join users u on fr.send_user_id = u.id
    where fr.accept_user_id = #{acceptUserId}
  </select>

<!--删除friends_request表中好友请求数据的sql语句-->
  <delete id="deleteFriendRequst" parameterType="org.wdzl.entity.FriendsRequest">
    delete from friends_request where send_user_id = #{sendUserId} and accept_user_id = #{acceptUserId}
  </delete>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from friends_request
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="org.wdzl.entity.FriendsRequest">
    insert into friends_request (id, send_user_id, accept_user_id, 
      request_date_time)
    values (#{id,jdbcType=VARCHAR}, #{sendUserId,jdbcType=VARCHAR}, #{acceptUserId,jdbcType=VARCHAR}, 
      #{requestDateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.wdzl.entity.FriendsRequest">
    insert into friends_request
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sendUserId != null">
        send_user_id,
      </if>
      <if test="acceptUserId != null">
        accept_user_id,
      </if>
      <if test="requestDateTime != null">
        request_date_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="sendUserId != null">
        #{sendUserId,jdbcType=VARCHAR},
      </if>
      <if test="acceptUserId != null">
        #{acceptUserId,jdbcType=VARCHAR},
      </if>
      <if test="requestDateTime != null">
        #{requestDateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.wdzl.entity.FriendsRequest">
    update friends_request
    <set>
      <if test="sendUserId != null">
        send_user_id = #{sendUserId,jdbcType=VARCHAR},
      </if>
      <if test="acceptUserId != null">
        accept_user_id = #{acceptUserId,jdbcType=VARCHAR},
      </if>
      <if test="requestDateTime != null">
        request_date_time = #{requestDateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.wdzl.entity.FriendsRequest">
    update friends_request
    set send_user_id = #{sendUserId,jdbcType=VARCHAR},
      accept_user_id = #{acceptUserId,jdbcType=VARCHAR},
      request_date_time = #{requestDateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>